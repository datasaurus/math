.\" 
.\" Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\"     * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer in the
.\"     documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Please address questions and feedback to dev0@trekix.net
.\" 
.\" $Revision: 1.5 $ $Date: 2011/11/28 16:43:52 $
.\"
.TH bisearch_lib 3 "binary search functions"
.SH NAME
BISearch, BISearchArr \- functions that search for intervals in monotonic arrays
.SH SYNOPSIS
.nf
\fBint BISearch(double\fP \fIx\fP, \fBdouble\fP *\fIxx\fP, \fBint\fP \fIn\fP\fB);\fP
\fBvoid BISearchArr(double *\fP\fIxx\fP, \fBint\fP \fInx\fP, \fBdouble *\fP\fIvv\fP, \fBint\fP \fInv\fP, \fBint *\fP\fIii\fP,
	\fBunsigned\fP *\fIc\fP\fB);\fP
.fi
.SH DESCRIPTION
\fBBiSearch\fP searches array \fIxx\fP of \fIn\fP elements for an interval
containing \fIx\fP.  Array \fIxx\fP must be monotonic.
If \fIxx\fP is increasing, return value \fIi\fP satisfies
\fIxx\fP\fB[\fP\fIi\fP\fB]\fP\ \fB<=\fP\ \fIx\fP\ \fB<\fP\ \fIxx\fP\fB[\fP\fIi\fP\fB+1]\fP.
If \fIxx\fP is decreasing, return value \fIi\fP satisfies
\fIxx\fP\fB[\fP\fIi\fP\fB]\fP\ \fB>=\fP\ \fIx\fP\ \fB>\fP\ \fIxx\fP\fB[\fP\fIi\fP\fB+1]\fP.
.PP
\fBBISearchArr\fP computes intervals in \fIvv\fP, a monotonic array of \fInv\fP
elements, which contain values from \fIxx\fP, an array of \fInx\fP elemets, and
stores the indeces at \fIii\fP, which should point to storage for \fInx\fP integers.
Array \fIc\fP receives a count of the number of elements from \fIxx\fP in each
interval.  It should point to storage for \fInv\fP\fB\ -\ 1\fP unsigned integers.
Upon return, if \fIi\fP\ \fB=\fP\ \fIii[n]\fP, then \fIi\fP satisfies
\fIvv\fP\fB[\fP\fIi\fP\fB]\fP\ \fB<=\fP\ \fIxx\fP\fB[\fP\fIn\fP\fB]\fP\ \fB<\fP\ \fIvv\fP\fB[\fP\fIi\fP\fB+1]\fP if \fIvv\fP is increasing, or
\fIvv\fP\fB[\fP\fIi\fP\fB]\fP\ \fB>=\fP\ \fIxx\fP\fB[\fP\fIn\fP\fB]\fP\ \fB>\fP\ \fIvv\fP\fB[\fP\fIi\fP\fB+1]\fP if \fIvv\fP is decreasing, and
\fIc\fP\fB[\fP\fIi\fP\fB]\fP contains the number of elements from \fIxx\fP that
satisfy the inequality.
.PP
For example, if
vv\ =\ {0\ 1\ 2\ 4\ 8}, and
xx\ =\ {3\ 5\ 0.5}, then on return
ii\ =\ {2\ 3\ 0}, and c\ =\ {1\ 0\ 1\ 1\ 0}.

.SH AUTHOR
Gordon Carrie (dev0@trekix.net)
