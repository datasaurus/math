.\" 
.\" Copyright (c) 2011, Gordon D. Carrie. All rights reserved.
.\" 
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 
.\"     * Redistributions of source code must retain the above copyright
.\"     notice, this list of conditions and the following disclaimer.
.\"     * Redistributions in binary form must reproduce the above copyright
.\"     notice, this list of conditions and the following disclaimer in the
.\"     documentation and/or other materials provided with the distribution.
.\" 
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
.\" "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
.\" LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
.\" A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
.\" HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED
.\" TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
.\" PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
.\" LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
.\" NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
.\" SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\" 
.\" Please address questions and feedback to dev0@trekix.net
.\" 
.\" $Revision: 1.4 $ $Date: 2009/12/16 21:41:43 $
.\"
.TH angle_lib 3 "angle functions"
.SH NAME
Angle_AzWrap, Angle_ElevWrap, Angle_GCDist \- angle functions
.SH SYNOPSIS
.nf
\fB#include "angle_lib.h"\fP
\fBdouble Angle_AzWrap(const double\fP \fIaz\fP, \fBconst double\fP \fIr\fP\fB);\fP
\fBdouble Angle_ElevWrap(const double\fP \fIelev\fP\fB);\fP
\fBdouble Angle_GCDist(const double\fP \fIaz1\fP, \fBconst double\fP \fIelev1\fP,
	\fBconst double\fP \fIaz2\fP, \fBconst double\fP \fIelev2\fP\fB);\fP
\fBdouble Angle_GCAz(const double\fP \fIaz1\fP, \fBconst double\fP \fIelev1\fP,
	\fBconst double\fP \fIaz2\fP, \fBconst double\fP \fIelev2\fP\fB);\fP
\fBvoid Angle_GCStep(const double\fP \fIaz\fP, \fBconst double\fP \fIelev\fP,
	\fBconst double\fP \fIdirn\fP, \fBconst double\fP \fIdist\fP, \fBdouble\fP *az1\fP, \fBdouble\fP *\fIelev1\fP\fB);\fP
.fi
.SH DESCRIPTION
In this context, angles az1 and az2 refer to azimuth, a.k.a. longitude or phi, and
elev1 and elev2 refer to elevation, also known as latitude or theta.
Angles are expressed in radians.

\fBAngle_AzWrap\fP returns \fIaz\fP\ +\ i\ *\ \fBpi\fP for some integer i, in the
interval [\fIr\fP\ -\ \fBpi\fP\ /\ 2,\ \fIr\fP\ +\ \fBpi\fP\ /\ 2).

\fBAngle_ElevWrap\fP returns the elevation (latitude) reached by going \fIelev\fP
radians up (North) from the plane of \fB0\fP elevation (the Equator).

\fBAngle_GCDist\fP returns the great circle distance between points
(\fIaz1\fP,\ \fIelev1\fP) and (\fIaz2\fP,\ \fIelev2\fP).

\fBAngle_GCAz\fP returns the angle from North clockwise to the great circle
connecting point (\fIaz1\fP,\ \fIelev1\fP) to point (\fIaz2\fP,\ \fIelev2\fP).

\fBAngle_GCStep\fP computes the azimuth and elevation of the point in direction
\fIdirn\fP and distance \fIdist\fP along a great circle from point
(\fIaz\fP,\ \fIelev\fP).  It places the azimuth and elevation of the destination
point at addresses \fIaz1\fP and \fIelev1\fP respectively.
.SH BUGS
\fBAngle_AzWrap\fP is sensitive to round off errors when
\fB|\fP\fIl\fP\ \fB-\fP\ \fIr\fP\fB|\fP\ \fB=\ pi\fP.  For example,
if \fIl\fR\ =\ \fB-170.0\fP degrees, \fIr\fP\ =\ \fB10.0\fP degrees, then with
conversions to and from radians, \fBAngle_AzWrap(l, r)\fP returns \fB-170.0\fP
degrees on some platforms and \fB190.0\fP degrees on others.
.SH AUTHOR
Gordon Carrie (dev0@trekix.net)
